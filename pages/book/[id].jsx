import { ApolloClient, InMemoryCache, gql } from '@apollo/client';
import Head from 'next/head';
// import Image from 'next/image'
// import styles from '../styles/Home.module.css';
import Layout from '../../components/layouts/default';

export async function getServerSideProps({ params }) {
  if (isNaN(params.id) || !params.id) return { notFound: true };
  const client = new ApolloClient({
    uri: 'http://localhost:4000/',
    ssrMode: true,
    cache: new InMemoryCache({ addTypename: false }),
  });

  const { data } = await client.query({
    query: gql`
      query Query {
        getOneBook(id: ${params.id}) {
          id
          title
          image
          author {
            name
            books {
              id
              title
            }
          }
          createdAt
        }
      }
    `,
  });
  return {
    props: {
      book: data.getOneBook,
    },
  };
}

export default function Book({ book }) {
  return (
    <Layout>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>hellllooo</h1>
      <pre>{JSON.stringify(book, null, 2)}</pre>
    </Layout>
  );
}
